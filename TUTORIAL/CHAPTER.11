"TUTORIAL EXAMPLES FOR CHAPTER 11 - OBJECT-ORIENTED DEVELOPMENT

Before filing in the PhoneBook class, evaluate the following
expression with Do it to remove the global variable PhoneBook
you created in Chapter 7 (you cannot have a class with the same
name as a global variable).  

    (Smalltalk includesKey: #PhoneBook)       
        ifTrue: [
            Smalltalk removeKey: #PhoneBook ] 


To file-in the phone book class, evaluate the
following expression with Do it.

    (File pathName: 'tutorial\chapter.11') fileIn; close

To open a phone book window evaluate the following
expression with Do it.

    PhoneBook new openOn: Dictionary new

"!


ViewManager subclass: #PhoneBook
  instanceVariableNames:
    'phones selectedName '
  classVariableNames: ''
  poolDictionaries: '' !

!PhoneBook methods !

add
        "Add a new name to the phones
         dictionary."
    | key |
    self textModified ifTrue: [^self].
    key := Prompter
        prompt: 'new name'
        default: String new.
    (key isNil or: [ phones includesKey: key ] )
        ifTrue: [^self].
    selectedName := key.
    phones at: key put: nil.
    self
        changed: #list:;
        changed: #list: with: #selection: with: key;
        changed: #text:!

list: aListPane
        "Fill the list pane with the names
         of people in the phone book."
    aListPane contents: phones keys asSortedCollection!

listMenu: aListPane
        "Set the name list menu."
    aListPane setMenu: ( ( Menu
        labels: '~Add\~Remove' withCrs
        lines: Array new
        selectors: #( add remove ) )
            title: '~Phones' )!

nameSelected: aListPane
        "Display the phone number for
         the selected name in aListPane."
    selectedName := aListPane selectedItem.
    self changed: #text:!

openOn: aDictionary
        "Open a phone book window on aDictionary.  
        Define the pane sizes and behavior, and 
        open the window."
    phones := aDictionary.
    self label: 'Phone Book '.
    self addSubpane:
        (ListPane new
            when: #getMenu perform: #listMenu: ;
            owner: self;
            when: #getContents perform: #list: ;
            when: #select perform: #nameSelected: ;
            framingRatio: ( Rectangle leftTopUnit 
                 extentFromLeftTop: 1/3 @ 1 ) ).
    self addSubpane:
        (TextPane new
            owner: self;
            when: #getContents perform: #text: ;
            when: #save perform: #textFrom: ;
            framingRatio: ( (Rectangle leftTopUnit  rightAndDown: 1/3 @ 0)
                extentFromLeftTop: 2/3 @ 1 ) ).
    self openWindow!

remove
        "Remove the selected name
         list entry."
    phones removeKey: selectedName
        ifAbsent: [ ].
    selectedName := nil.
    self
        changed: #list:;
        changed: #text:!

text: aTextPane
        "Set the contents of the text pane
         with the phone number string
         for the selected name."
    aTextPane contents: ( phones at: selectedName
            ifAbsent: [''] )!
                                                                            
textFrom: aTextPane
        "Get the contents of the text pane as the
         phone number for the selected
         name and enter into dictionary."
    selectedName isNil
        ifTrue: [^true].
    phones at: selectedName put: aTextPane contents.
    aTextPane modified: false! !


